const mongoose = require('mongoose');

mongoose.connect(process.env.MONGO_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true
})
.then(() => console.log("✅ MongoDB Connected"))
.catch((err) => console.log("❌ MongoDB Connection Error:", err));
// 📁 File: server.js

const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const fs = require('fs');
const bcrypt = require('bcrypt');
require('dotenv')const User = require('./models/User');

app.post('/register', async (req, res) => {
  const { username, password, ip, location, permissions, device } = req.body;

  const hashedPassword = await bcrypt.hash(password, 10);

  const newUser = new User({
    username,
    password: hashedPassword,
    ip,
    location,
    permissions,
    device
  });

  await newUser.save(); // ✅ MongoDB me save hoga

  res.json({ success: true, message: "✅ User saved to MongoDB" });
});const app = express();
const PORT = process.env.PORT || 3000;

app.use(cors());
app.use(bodyParser.json());
app.use(express.static('docs')); // serve static HTML

const dbFile = './userData.json';

// ✅ Register route
app.post('/register', async (req, res) => {
  const { username, password, ip, location, permissions, device } = req.body;

 
// ✅ Login route
app.post('/login', async (req, res) => {
  const { username, password, ip, location, permissions, device } = req.body;
MONGO_URI=mongodb+srv://Cyberadmin123:u6eMFp7v6E0jirnp@cluster0.qpxyjuu.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
PORT=3000


  if (!fs.existsSync(dbFile)) return res.json({ success: false, message: "No users registered" });

  const users = JSON.parse(fs.readFileSync(dbFile));
  const user = users.find(u => u.username === username);

  if (user && await bcrypt.compare(password, user.password)) {
    // Login successful — log the event
    const loginLog = {
      username,
      ip,
      location,
      permissions,
      device,
      loginTime: new Date()
    };

    const logFile = './loginLog.json';
    let logs = [];
    if (fs.existsSync(logFile)) {
      logs = JSON.parse(fs.readFileSync(logFile));
    }
    logs.push(loginLog);
    fs.writeFileSync(logFile, JSON.stringify(logs, null, 2));

    res.json({ success: true, message: '✅ Login successful' });
  } else {
    res.json({ success: false, message: '❌ Invalid credentials' });
  }
});

app.listen(PORT, () => {
  console.log(`🚀 Server running on http://localhost:${PORT}`);
});
